{"id":"node_modules/ol/functions.js","dependencies":[{"name":"/Users/kyleweingart/Documents/working/openlayers_myexamples/VectorClip/node_modules/ol/functions.js.map","includedInParent":true,"mtime":499162500000},{"name":"/Users/kyleweingart/Documents/working/openlayers_myexamples/VectorClip/node_modules/ol/src/functions.js","includedInParent":true,"mtime":499162500000},{"name":"/Users/kyleweingart/Documents/working/openlayers_myexamples/VectorClip/package.json","includedInParent":true,"mtime":1586984203875},{"name":"/Users/kyleweingart/Documents/working/openlayers_myexamples/VectorClip/node_modules/ol/package.json","includedInParent":true,"mtime":1610123493613},{"name":"./array.js","loc":{"line":4,"column":38},"parent":"/Users/kyleweingart/Documents/working/openlayers_myexamples/VectorClip/node_modules/ol/functions.js","resolved":"/Users/kyleweingart/Documents/working/openlayers_myexamples/VectorClip/node_modules/ol/array.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TRUE = TRUE;\nexports.FALSE = FALSE;\nexports.VOID = VOID;\nexports.memoizeOne = memoizeOne;\n\nvar _array = require(\"./array.js\");\n\n/**\n * @module ol/functions\n */\n\n/**\n * Always returns true.\n * @returns {boolean} true.\n */\nfunction TRUE() {\n  return true;\n}\n/**\n * Always returns false.\n * @returns {boolean} false.\n */\n\n\nfunction FALSE() {\n  return false;\n}\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\n\n\nfunction VOID() {}\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\n\n\nfunction memoizeOne(fn) {\n  var called = false;\n  /** @type {ReturnType} */\n\n  var lastResult;\n  /** @type {Array<any>} */\n\n  var lastArgs;\n  var lastThis;\n  return function () {\n    var nextArgs = Array.prototype.slice.call(arguments);\n\n    if (!called || this !== lastThis || !(0, _array.equals)(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n\n    return lastResult;\n  };\n}"},"sourceMaps":{"js":{"mappings":[{"source":"src/functions.js","name":null,"original":{"line":5,"column":0},"generated":{"line":11,"column":0}},{"source":"src/functions.js","name":null,"original":{"line":1,"column":0},"generated":{"line":13,"column":0}},{"source":"src/functions.js","name":null,"original":{"line":7,"column":0},"generated":{"line":17,"column":0}},{"source":"src/functions.js","name":null,"original":{"line":11,"column":6},"generated":{"line":21,"column":0}},{"source":"src/functions.js","name":null,"original":{"line":11,"column":16},"generated":{"line":21,"column":9}},{"source":"src/functions.js","name":null,"original":{"line":11,"column":6},"generated":{"line":21,"column":13}},{"source":"src/functions.js","name":null,"original":{"line":11,"column":20},"generated":{"line":21,"column":16}},{"source":"src/functions.js","name":null,"original":{"line":12,"column":2},"generated":{"line":22,"column":0}},{"source":"src/functions.js","name":null,"original":{"line":12,"column":9},"generated":{"line":22,"column":9}},{"source":"src/functions.js","name":null,"original":{"line":12,"column":2},"generated":{"line":22,"column":13}},{"source":"src/functions.js","name":null,"original":{"line":13,"column":1},"generated":{"line":23,"column":0}},{"source":"src/functions.js","name":null,"original":{"line":15,"column":0},"generated":{"line":24,"column":0}},{"source":"src/functions.js","name":null,"original":{"line":19,"column":6},"generated":{"line":30,"column":0}},{"source":"src/functions.js","name":null,"original":{"line":19,"column":16},"generated":{"line":30,"column":9}},{"source":"src/functions.js","name":null,"original":{"line":19,"column":6},"generated":{"line":30,"column":14}},{"source":"src/functions.js","name":null,"original":{"line":19,"column":21},"generated":{"line":30,"column":17}},{"source":"src/functions.js","name":null,"original":{"line":20,"column":2},"generated":{"line":31,"column":0}},{"source":"src/functions.js","name":null,"original":{"line":20,"column":9},"generated":{"line":31,"column":9}},{"source":"src/functions.js","name":null,"original":{"line":20,"column":2},"generated":{"line":31,"column":14}},{"source":"src/functions.js","name":null,"original":{"line":21,"column":1},"generated":{"line":32,"column":0}},{"source":"src/functions.js","name":null,"original":{"line":23,"column":0},"generated":{"line":33,"column":0}},{"source":"src/functions.js","name":null,"original":{"line":28,"column":6},"generated":{"line":40,"column":0}},{"source":"src/functions.js","name":null,"original":{"line":28,"column":16},"generated":{"line":40,"column":9}},{"source":"src/functions.js","name":null,"original":{"line":28,"column":6},"generated":{"line":40,"column":13}},{"source":"src/functions.js","name":null,"original":{"line":28,"column":20},"generated":{"line":40,"column":16}},{"source":"src/functions.js","name":null,"original":{"line":28,"column":25},"generated":{"line":40,"column":17}},{"source":"src/functions.js","name":null,"original":{"line":30,"column":0},"generated":{"line":41,"column":0}},{"source":"src/functions.js","name":null,"original":{"line":39,"column":6},"generated":{"line":52,"column":0}},{"source":"src/functions.js","name":null,"original":{"line":39,"column":16},"generated":{"line":52,"column":9}},{"source":"src/functions.js","name":null,"original":{"line":39,"column":6},"generated":{"line":52,"column":19}},{"source":"src/functions.js","name":null,"original":{"line":39,"column":27},"generated":{"line":52,"column":20}},{"source":"src/functions.js","name":null,"original":{"line":39,"column":6},"generated":{"line":52,"column":22}},{"source":"src/functions.js","name":null,"original":{"line":39,"column":29},"generated":{"line":52,"column":24}},{"source":"src/functions.js","name":null,"original":{"line":40,"column":2},"generated":{"line":53,"column":0}},{"source":"src/functions.js","name":null,"original":{"line":40,"column":6},"generated":{"line":53,"column":6}},{"source":"src/functions.js","name":null,"original":{"line":40,"column":12},"generated":{"line":53,"column":12}},{"source":"src/functions.js","name":null,"original":{"line":40,"column":15},"generated":{"line":53,"column":15}},{"source":"src/functions.js","name":null,"original":{"line":40,"column":2},"generated":{"line":53,"column":20}},{"source":"src/functions.js","name":null,"original":{"line":42,"column":2},"generated":{"line":54,"column":0}},{"source":"src/functions.js","name":null,"original":{"line":43,"column":2},"generated":{"line":56,"column":0}},{"source":"src/functions.js","name":null,"original":{"line":43,"column":6},"generated":{"line":56,"column":6}},{"source":"src/functions.js","name":null,"original":{"line":43,"column":2},"generated":{"line":56,"column":16}},{"source":"src/functions.js","name":null,"original":{"line":45,"column":2},"generated":{"line":57,"column":0}},{"source":"src/functions.js","name":null,"original":{"line":46,"column":2},"generated":{"line":59,"column":0}},{"source":"src/functions.js","name":null,"original":{"line":46,"column":6},"generated":{"line":59,"column":6}},{"source":"src/functions.js","name":null,"original":{"line":46,"column":2},"generated":{"line":59,"column":14}},{"source":"src/functions.js","name":null,"original":{"line":48,"column":2},"generated":{"line":60,"column":0}},{"source":"src/functions.js","name":null,"original":{"line":48,"column":6},"generated":{"line":60,"column":6}},{"source":"src/functions.js","name":null,"original":{"line":48,"column":2},"generated":{"line":60,"column":14}},{"source":"src/functions.js","name":null,"original":{"line":50,"column":2},"generated":{"line":61,"column":0}},{"source":"src/functions.js","name":null,"original":{"line":50,"column":9},"generated":{"line":61,"column":9}},{"source":"src/functions.js","name":null,"original":{"line":50,"column":9},"generated":{"line":61,"column":21}},{"source":"src/functions.js","name":null,"original":{"line":51,"column":4},"generated":{"line":62,"column":0}},{"source":"src/functions.js","name":null,"original":{"line":51,"column":10},"generated":{"line":62,"column":8}},{"source":"src/functions.js","name":null,"original":{"line":51,"column":18},"generated":{"line":62,"column":16}},{"source":"src/functions.js","name":null,"original":{"line":51,"column":21},"generated":{"line":62,"column":19}},{"source":"src/functions.js","name":null,"original":{"line":51,"column":26},"generated":{"line":62,"column":24}},{"source":"src/functions.js","name":null,"original":{"line":51,"column":27},"generated":{"line":62,"column":25}},{"source":"src/functions.js","name":null,"original":{"line":51,"column":21},"generated":{"line":62,"column":34}},{"source":"src/functions.js","name":null,"original":{"line":51,"column":37},"generated":{"line":62,"column":35}},{"source":"src/functions.js","name":null,"original":{"line":51,"column":21},"generated":{"line":62,"column":40}},{"source":"src/functions.js","name":null,"original":{"line":51,"column":43},"generated":{"line":62,"column":41}},{"source":"src/functions.js","name":null,"original":{"line":51,"column":21},"generated":{"line":62,"column":45}},{"source":"src/functions.js","name":null,"original":{"line":51,"column":48},"generated":{"line":62,"column":46}},{"source":"src/functions.js","name":null,"original":{"line":51,"column":21},"generated":{"line":62,"column":55}},{"source":"src/functions.js","name":null,"original":{"line":51,"column":4},"generated":{"line":62,"column":56}},{"source":"src/functions.js","name":null,"original":{"line":52,"column":4},"generated":{"line":64,"column":0}},{"source":"src/functions.js","name":null,"original":{"line":52,"column":8},"generated":{"line":64,"column":8}},{"source":"src/functions.js","name":null,"original":{"line":52,"column":9},"generated":{"line":64,"column":9}},{"source":"src/functions.js","name":null,"original":{"line":52,"column":8},"generated":{"line":64,"column":15}},{"source":"src/functions.js","name":null,"original":{"line":52,"column":19},"generated":{"line":64,"column":19}},{"source":"src/functions.js","name":null,"original":{"line":52,"column":28},"generated":{"line":64,"column":28}},{"source":"src/functions.js","name":null,"original":{"line":52,"column":8},"generated":{"line":64,"column":36}},{"source":"src/functions.js","name":null,"original":{"line":52,"column":40},"generated":{"line":64,"column":40}},{"source":"src/functions.js","name":null,"original":{"line":52,"column":41},"generated":{"line":64,"column":41}},{"source":"src/functions.js","name":null,"original":{"line":52,"column":53},"generated":{"line":64,"column":60}},{"source":"src/functions.js","name":null,"original":{"line":52,"column":41},"generated":{"line":64,"column":68}},{"source":"src/functions.js","name":null,"original":{"line":52,"column":63},"generated":{"line":64,"column":70}},{"source":"src/functions.js","name":null,"original":{"line":52,"column":41},"generated":{"line":64,"column":78}},{"source":"src/functions.js","name":null,"original":{"line":52,"column":4},"generated":{"line":64,"column":79}},{"source":"src/functions.js","name":null,"original":{"line":52,"column":74},"generated":{"line":64,"column":81}},{"source":"src/functions.js","name":null,"original":{"line":53,"column":6},"generated":{"line":65,"column":0}},{"source":"src/functions.js","name":null,"original":{"line":53,"column":6},"generated":{"line":65,"column":6}},{"source":"src/functions.js","name":null,"original":{"line":53,"column":12},"generated":{"line":65,"column":12}},{"source":"src/functions.js","name":null,"original":{"line":53,"column":15},"generated":{"line":65,"column":15}},{"source":"src/functions.js","name":null,"original":{"line":53,"column":6},"generated":{"line":65,"column":19}},{"source":"src/functions.js","name":null,"original":{"line":54,"column":6},"generated":{"line":66,"column":0}},{"source":"src/functions.js","name":null,"original":{"line":54,"column":6},"generated":{"line":66,"column":6}},{"source":"src/functions.js","name":null,"original":{"line":54,"column":14},"generated":{"line":66,"column":14}},{"source":"src/functions.js","name":null,"original":{"line":54,"column":17},"generated":{"line":66,"column":17}},{"source":"src/functions.js","name":null,"original":{"line":54,"column":6},"generated":{"line":66,"column":21}},{"source":"src/functions.js","name":null,"original":{"line":55,"column":6},"generated":{"line":67,"column":0}},{"source":"src/functions.js","name":null,"original":{"line":55,"column":6},"generated":{"line":67,"column":6}},{"source":"src/functions.js","name":null,"original":{"line":55,"column":14},"generated":{"line":67,"column":14}},{"source":"src/functions.js","name":null,"original":{"line":55,"column":17},"generated":{"line":67,"column":17}},{"source":"src/functions.js","name":null,"original":{"line":55,"column":6},"generated":{"line":67,"column":25}},{"source":"src/functions.js","name":null,"original":{"line":56,"column":6},"generated":{"line":68,"column":0}},{"source":"src/functions.js","name":null,"original":{"line":56,"column":6},"generated":{"line":68,"column":6}},{"source":"src/functions.js","name":null,"original":{"line":56,"column":16},"generated":{"line":68,"column":16}},{"source":"src/functions.js","name":null,"original":{"line":56,"column":19},"generated":{"line":68,"column":19}},{"source":"src/functions.js","name":null,"original":{"line":56,"column":21},"generated":{"line":68,"column":21}},{"source":"src/functions.js","name":null,"original":{"line":56,"column":22},"generated":{"line":68,"column":22}},{"source":"src/functions.js","name":null,"original":{"line":56,"column":19},"generated":{"line":68,"column":27}},{"source":"src/functions.js","name":null,"original":{"line":56,"column":28},"generated":{"line":68,"column":28}},{"source":"src/functions.js","name":null,"original":{"line":56,"column":19},"generated":{"line":68,"column":32}},{"source":"src/functions.js","name":null,"original":{"line":56,"column":34},"generated":{"line":68,"column":34}},{"source":"src/functions.js","name":null,"original":{"line":56,"column":19},"generated":{"line":68,"column":43}},{"source":"src/functions.js","name":null,"original":{"line":56,"column":6},"generated":{"line":68,"column":44}},{"source":"src/functions.js","name":null,"original":{"line":57,"column":5},"generated":{"line":69,"column":0}},{"source":"src/functions.js","name":null,"original":{"line":58,"column":4},"generated":{"line":71,"column":0}},{"source":"src/functions.js","name":null,"original":{"line":58,"column":11},"generated":{"line":71,"column":11}},{"source":"src/functions.js","name":null,"original":{"line":58,"column":4},"generated":{"line":71,"column":21}},{"source":"src/functions.js","name":null,"original":{"line":59,"column":3},"generated":{"line":72,"column":0}},{"source":"src/functions.js","name":null,"original":{"line":50,"column":2},"generated":{"line":72,"column":3}},{"source":"src/functions.js","name":null,"original":{"line":60,"column":1},"generated":{"line":73,"column":0}}],"sources":{"src/functions.js":"/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @returns {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @returns {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n"},"lineCount":null}},"error":null,"hash":"5a4073097ae75c5ff5c7a5440cc21b6c","cacheData":{"env":{}}}