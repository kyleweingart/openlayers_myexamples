{"id":"node_modules/ol/format/filter/And.js","dependencies":[{"name":"/Users/kyleweingart/Documents/working/openlayers_myexamples/WPSCrop/node_modules/ol/format/filter/And.js.map","includedInParent":true,"mtime":499162500000},{"name":"/Users/kyleweingart/Documents/working/openlayers_myexamples/WPSCrop/node_modules/ol/src/format/filter/And.js","includedInParent":true,"mtime":499162500000},{"name":"/Users/kyleweingart/Documents/working/openlayers_myexamples/WPSCrop/package.json","includedInParent":true,"mtime":1618595962862},{"name":"/Users/kyleweingart/Documents/working/openlayers_myexamples/WPSCrop/node_modules/ol/package.json","includedInParent":true,"mtime":1618596090374},{"name":"./LogicalNary.js","loc":{"line":17,"column":24},"parent":"/Users/kyleweingart/Documents/working/openlayers_myexamples/WPSCrop/node_modules/ol/format/filter/And.js","resolved":"/Users/kyleweingart/Documents/working/openlayers_myexamples/WPSCrop/node_modules/ol/format/filter/LogicalNary.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _LogicalNary = _interopRequireDefault(require(\"./LogicalNary.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar __extends = void 0 && (void 0).__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/format/filter/And\n */\n\n\n/**\n * @classdesc\n * Represents a logical `<And>` operator between two or more filter conditions.\n *\n * @abstract\n */\nvar And =\n/** @class */\nfunction (_super) {\n  __extends(And, _super);\n  /**\n   * @param {...import(\"./Filter.js\").default} conditions Conditions.\n   */\n\n\n  function And(conditions) {\n    return _super.call(this, 'And', Array.prototype.slice.call(arguments)) || this;\n  }\n\n  return And;\n}(_LogicalNary.default);\n\nvar _default = And;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"source":"../../src/format/filter/And.js","name":null,"original":{"line":4,"column":0},"generated":{"line":8,"column":0}},{"source":"../../src/format/filter/And.js","name":null,"original":{"line":1,"column":0},"generated":{"line":35,"column":0}},{"source":"../../src/format/filter/And.js","name":null,"original":{"line":6,"column":0},"generated":{"line":40,"column":0}},{"source":"../../src/format/filter/And.js","name":null,"original":{"line":12,"column":0},"generated":{"line":46,"column":0}},{"source":"../../src/format/filter/And.js","name":null,"original":{"line":12,"column":0},"generated":{"line":46,"column":4}},{"source":"../../src/format/filter/And.js","name":null,"original":{"line":12,"column":0},"generated":{"line":46,"column":7}},{"source":"../../src/format/filter/And.js","name":null,"original":{"line":12,"column":0},"generated":{"line":47,"column":0}},{"source":"../../src/format/filter/And.js","name":null,"original":{"line":12,"column":0},"generated":{"line":48,"column":0}},{"source":"../../src/format/filter/And.js","name":null,"original":{"line":12,"column":0},"generated":{"line":48,"column":10}},{"source":"../../src/format/filter/And.js","name":null,"original":{"line":12,"column":0},"generated":{"line":48,"column":16}},{"source":"../../src/format/filter/And.js","name":null,"original":{"line":12,"column":0},"generated":{"line":48,"column":18}},{"source":"../../src/format/filter/And.js","name":null,"original":{"line":12,"column":18},"generated":{"line":49,"column":0}},{"source":"../../src/format/filter/And.js","name":null,"original":{"line":12,"column":18},"generated":{"line":49,"column":2}},{"source":"../../src/format/filter/And.js","name":null,"original":{"line":12,"column":18},"generated":{"line":49,"column":11}},{"source":"../../src/format/filter/And.js","name":null,"original":{"line":12,"column":18},"generated":{"line":49,"column":12}},{"source":"../../src/format/filter/And.js","name":null,"original":{"line":12,"column":18},"generated":{"line":49,"column":15}},{"source":"../../src/format/filter/And.js","name":null,"original":{"line":12,"column":18},"generated":{"line":49,"column":17}},{"source":"../../src/format/filter/And.js","name":null,"original":{"line":12,"column":18},"generated":{"line":49,"column":23}},{"source":"../../src/format/filter/And.js","name":null,"original":{"line":12,"column":18},"generated":{"line":49,"column":24}},{"source":"../../src/format/filter/And.js","name":null,"original":{"line":13,"column":2},"generated":{"line":50,"column":0}},{"source":"../../src/format/filter/And.js","name":null,"original":{"line":16,"column":2},"generated":{"line":55,"column":0}},{"source":"../../src/format/filter/And.js","name":null,"original":{"line":16,"column":2},"generated":{"line":55,"column":11}},{"source":"../../src/format/filter/And.js","name":null,"original":{"line":16,"column":2},"generated":{"line":55,"column":14}},{"source":"../../src/format/filter/And.js","name":null,"original":{"line":16,"column":14},"generated":{"line":55,"column":15}},{"source":"../../src/format/filter/And.js","name":null,"original":{"line":16,"column":2},"generated":{"line":55,"column":25}},{"source":"../../src/format/filter/And.js","name":null,"original":{"line":16,"column":24},"generated":{"line":55,"column":27}},{"source":"../../src/format/filter/And.js","name":null,"original":{"line":17,"column":4},"generated":{"line":56,"column":11}},{"source":"../../src/format/filter/And.js","name":null,"original":{"line":17,"column":4},"generated":{"line":56,"column":17}},{"source":"../../src/format/filter/And.js","name":null,"original":{"line":17,"column":4},"generated":{"line":56,"column":18}},{"source":"../../src/format/filter/And.js","name":null,"original":{"line":17,"column":4},"generated":{"line":56,"column":22}},{"source":"../../src/format/filter/And.js","name":null,"original":{"line":17,"column":4},"generated":{"line":56,"column":23}},{"source":"../../src/format/filter/And.js","name":null,"original":{"line":17,"column":4},"generated":{"line":56,"column":27}},{"source":"../../src/format/filter/And.js","name":null,"original":{"line":17,"column":10},"generated":{"line":56,"column":29}},{"source":"../../src/format/filter/And.js","name":null,"original":{"line":17,"column":4},"generated":{"line":56,"column":34}},{"source":"../../src/format/filter/And.js","name":null,"original":{"line":17,"column":17},"generated":{"line":56,"column":36}},{"source":"../../src/format/filter/And.js","name":null,"original":{"line":17,"column":22},"generated":{"line":56,"column":41}},{"source":"../../src/format/filter/And.js","name":null,"original":{"line":17,"column":23},"generated":{"line":56,"column":42}},{"source":"../../src/format/filter/And.js","name":null,"original":{"line":17,"column":17},"generated":{"line":56,"column":51}},{"source":"../../src/format/filter/And.js","name":null,"original":{"line":17,"column":33},"generated":{"line":56,"column":52}},{"source":"../../src/format/filter/And.js","name":null,"original":{"line":17,"column":17},"generated":{"line":56,"column":57}},{"source":"../../src/format/filter/And.js","name":null,"original":{"line":17,"column":39},"generated":{"line":56,"column":58}},{"source":"../../src/format/filter/And.js","name":null,"original":{"line":17,"column":17},"generated":{"line":56,"column":62}},{"source":"../../src/format/filter/And.js","name":null,"original":{"line":17,"column":44},"generated":{"line":56,"column":63}},{"source":"../../src/format/filter/And.js","name":null,"original":{"line":17,"column":17},"generated":{"line":56,"column":72}},{"source":"../../src/format/filter/And.js","name":null,"original":{"line":17,"column":4},"generated":{"line":56,"column":73}},{"source":"../../src/format/filter/And.js","name":null,"original":{"line":17,"column":55},"generated":{"line":56,"column":78}},{"source":"../../src/format/filter/And.js","name":null,"original":{"line":18,"column":3},"generated":{"line":57,"column":0}},{"source":"../../src/format/filter/And.js","name":null,"original":{"line":19,"column":0},"generated":{"line":59,"column":0}},{"source":"../../src/format/filter/And.js","name":null,"original":{"line":19,"column":0},"generated":{"line":59,"column":9}},{"source":"../../src/format/filter/And.js","name":null,"original":{"line":19,"column":0},"generated":{"line":59,"column":12}},{"source":"../../src/format/filter/And.js","name":null,"original":{"line":12,"column":0},"generated":{"line":60,"column":0}},{"source":"../../src/format/filter/And.js","name":null,"original":{"line":12,"column":0},"generated":{"line":60,"column":1}},{"source":"../../src/format/filter/And.js","name":null,"original":{"line":12,"column":18},"generated":{"line":60,"column":2}},{"source":"../../src/format/filter/And.js","name":null,"original":{"line":12,"column":0},"generated":{"line":60,"column":22}},{"source":"../../src/format/filter/And.js","name":null,"original":{"line":12,"column":0},"generated":{"line":60,"column":23}},{"source":"../../src/format/filter/And.js","name":null,"original":{"line":21,"column":15},"generated":{"line":62,"column":15}}],"sources":{"../../src/format/filter/And.js":"/**\n * @module ol/format/filter/And\n */\nimport LogicalNary from './LogicalNary.js';\n\n/**\n * @classdesc\n * Represents a logical `<And>` operator between two or more filter conditions.\n *\n * @abstract\n */\nclass And extends LogicalNary {\n  /**\n   * @param {...import(\"./Filter.js\").default} conditions Conditions.\n   */\n  constructor(conditions) {\n    super('And', Array.prototype.slice.call(arguments));\n  }\n}\n\nexport default And;\n"},"lineCount":null}},"error":null,"hash":"2607d749a7c5efedfe369a71e3ec57b7","cacheData":{"env":{}}}